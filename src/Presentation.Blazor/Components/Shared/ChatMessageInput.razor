@using Goodtocode.SemanticKernel.Presentation.Blazor.Models
@using Goodtocode.SemanticKernel.Presentation.Blazor.Services
@using Goodtocode.SemanticKernel.Presentation.Blazor.Utilities
@using Microsoft.AspNetCore.Components.Web

@inject IChatService chatService
@inject IUserService userService

@code{
    [Parameter] public ChatSessionsModel Sessions { get; set; } = new ChatSessionsModel();    
}

<div class="input-group mb-3">
    <input @bind="newMessage" type="text" class="form-control" placeholder="Type your message here..." aria-label="Type your message here..." aria-describedby="button-send">
    <button class="btn btn-primary" type="button" id="button-send" @onclick="SubmitMessage">Send</button>
</div>

@code
{
    private string? newMessage { get; set; }
    private async Task SubmitMessage()
    {
        if (!string.IsNullOrEmpty(newMessage))
        {
            if (Sessions.ActiveSession == null)
            {
                var newSession = new ChatSessionModel
                    {
                        Id = Guid.NewGuid(),
                        Title = "New Session",
                        AuthorId = Guid.NewGuid(),
                        Timestamp = DateTimeOffset.Now,
                        IsActive = true,
                        Messages = new List<ChatMessageModel>()
                    };
                Sessions.Add(newSession);
                await chatService.CreateSessionAsync(newSession, newMessage);
            }
            else
            {
                var newMessage = new ChatMessageModel
                {
                        Id = Guid.NewGuid(),
                        ChatSessionId = Sessions.ActiveSession.Id,
                        Role = "User",
                        Content = this.newMessage,
                        Timestamp = DateTimeOffset.Now
                    };
                Sessions.ActiveSession?.Messages?.Add(newMessage);
                await chatService.SendMessageAsync(Sessions.ActiveSession!, this.newMessage);
            }
            newMessage = string.Empty;
        }
    }
}
