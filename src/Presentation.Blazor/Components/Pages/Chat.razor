@page "/chat"
@rendermode InteractiveServer

@using Goodtocode.SemanticKernel.Presentation.Blazor.Components.Shared
@using Goodtocode.SemanticKernel.Presentation.Blazor.Models
@using Goodtocode.SemanticKernel.Presentation.Blazor.Services
@using Goodtocode.SemanticKernel.Presentation.Blazor.Utilities
@using Microsoft.AspNetCore.Components.Web

@inject IChatService chatService

<PageTitle>Semantic Kernel Chat Session</PageTitle>

<h1>How can I help?</h1>

<div class="row">
    <div class="col-9">
        <ChatMessages Messages="activeMessages" />
        <ChatMessageInput Sessions="chatSessions" OnMessageSubmitted="HandleMessageSubmitted" />
    </div>
    <div class="col-3">
        <ChatSessions Sessions="chatSessions" OnSessionSelected="HandleSessionSelected" />
    </div>
</div>

@code {
    private ChatSessionsModel chatSessions = new ChatSessionsModel();
    private ICollection<ChatMessageModel>? activeMessages;

    private async Task GetSessionsAsync()
    {
        chatSessions = new ChatSessionsModel();
        chatSessions.AddRange(await chatService.GetChatSessionsAsync());
        UpdateActiveMessages();
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await GetSessionsAsync();
        StateHasChanged();
    }

    private async Task HandleMessageSubmitted()
    {
        await GetSessionsAsync();
        StateHasChanged();
    }

    private async Task HandleSessionSelected()
    {
        await Task.Run(() => UpdateActiveMessages());
        StateHasChanged();
    }

    private void UpdateActiveMessages()
    {
        activeMessages = chatSessions.ActiveSession?.Messages;
    }
}
