@page "/chat"
@rendermode InteractiveServer

@using Goodtocode.SemanticKernel.Presentation.Blazor.Components.Shared
@using Goodtocode.SemanticKernel.Presentation.Blazor.Models
@using Goodtocode.SemanticKernel.Presentation.Blazor.Services
@using Goodtocode.SemanticKernel.Presentation.Blazor.Utilities
@using Microsoft.AspNetCore.Components.Web

@inject IChatService chatService

<PageTitle>Semantic Kernel Chat Session</PageTitle>

<h1>How can I help?</h1>

<div class="row">
    <div class="col-9">
        <ChatMessages Messages="chatSessions.ActiveSession?.Messages" />
        <ChatMessageInput Sessions="chatSessions OnMessageSubmitted="HandleMessageSubmitted" />
    </div>
    <div class="col-3">
        <ChatSessions Sessions="chatSessions" />
    </div>
</div>

@code {
    private ChatSessionsModel chatSessions = new ChatSessionsModel();

    private async Task GetSessionsAsync()
    {
        chatSessions = new ChatSessionsModel();
        chatSessions.AddRange(await chatService.GetChatSessionsAsync());
        chatSessions.SetActive(1);
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetSessionsAsync();
        }
    }

    private async Task HandleMessageSubmitted()
    {
        await GetSessionsAsync();
    }
}
