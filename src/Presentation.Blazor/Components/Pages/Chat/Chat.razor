@page "/chat"
@rendermode InteractiveServer

@using Goodtocode.SemanticKernel.Presentation.Blazor.Components.Pages.Chat.Components
@using Goodtocode.SemanticKernel.Presentation.Blazor.Components.Shared
@using Goodtocode.SemanticKernel.Presentation.Blazor.Models
@using Goodtocode.SemanticKernel.Presentation.Blazor.Services

@inject IChatService chatService

<PageTitle>Semantic Kernel Chat Session</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-8 offset-4">
            <PageH1>What can I help you with?</PageH1>
        </div>
    </div>

    <div class="row">
        <div class="col-4">
            <ChatSessions Sessions="chatSessions" OnSessionSelected="HandleSessionSelected" />
        </div>
        <div class="col-8">
            <ChatMessages Messages="activeMessages" />
            <ChatMessageInput Sessions="chatSessions" OnMessageSubmitted="HandleMessageSubmitted" />
        </div>
    </div>
</div>

@code {
    private ChatSessionsModel chatSessions = new ChatSessionsModel();
    private ICollection<ChatMessageModel>? activeMessages;


    protected override async Task OnInitializedAsync()
    {
        chatSessions = new ChatSessionsModel();
        chatSessions.AddRange(await chatService.GetChatSessionsAsync());
        RefreshActiveMessages();
    }

    private async Task HandleMessageSubmitted()
    {
        chatSessions.RefreshItem(await chatService.GetChatSessionAsync(chatSessions?.ActiveSession?.Id ?? Guid.Empty));
        RefreshActiveMessages();
    }

    private async Task HandleSessionSelected()
    {
        await Task.Run(() => RefreshActiveMessages());
    }

    private void RefreshActiveMessages()
    {
        activeMessages = chatSessions.ActiveSession?.Messages;
    }
}
